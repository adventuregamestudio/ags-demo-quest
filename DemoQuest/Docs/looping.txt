                            Looping Town
                           by System Error

  This demo is intended to show how a room which scroll is
loopable can be made in AGS (Adventure Game Studio). If you are
a programmer and don't know about this engine, you can check it
at ags.adventuredeveloper.com
  The concept to make a looping room is easy. In this game I
have changed the original Walk Mode for a walking script I
added some features. I don't know if it works exactly as Chris
Jones' script, that's why I think it is advisable not to use
this script in any other room than the looping ones.
  In order to create a room that can be scrolled loopingly you
must do the following:
- Copy the first 480 pixels of your background bitmap at the
end of the image. You should do it with your hotspot, walkable
area and walk-behind images if necessary.
- Inside the function on_mouse_click(int button) you must
add a line before the ProcessClick, this line must be:
if (GetCursorMode() == 0) walk(mouse.x,mouse.y,GetViewportX());
This is the line I used for running my own walking script,
there might be some other perhaps simpler ways of making it.
- Create a function called walk(int mx, int my, int ox) or
whatever you would need to make your loop, this function is the
one I used.
  The first two lines of this functions check where has the 
mouse clicked (where the player chose to move his character
to). If the click is done amongst the first 160 pixels of the
room, the character must be teleported the size of a room to
the right, but it doesn't mean an expanded room but the
original one. It means that, if your background was 640 pixels
wide and you widened it to a total of 1120 pixels, your
character should be teleported just 640 pixels to the right.
  This line should look like:
if (mx+ox <= 160) character[EGO].x = character[EGO].x + 640;
  mx means the x position where the mouse was when the click
happened. ox was the x offset of the background when the click
happened. Notice that when you change the x position of your
character it will change the offset, also, so later on you
won't be able to use ox anymore.
  The next line should be the same but when the player clicks
to walk in the last 160 pixels of the screen. It should look
like this:
if (mx+ox >= 980) character[EGO].x = character[EGO].x - 640;
  This last line shoulde be an else if instead of an if to
avoid any errors that could happen if the player could be
located in an intermediate position between both ranges (not
very often).
  Remember that the numbers 640 and 980 should be changed to
YOURIMAGESIZE and YOURIMAGESIZE-160.
  The last line will always be run wether the click was in the
important zones or not, it is the common process of the click
and goes:
MoveCharacter(EGO,mx+GetViewportX(),my);
  Notice this time you can't use ox insted of GetViewPortX
because your offset may have been changed by the two previous
lines.

  That's more or less about it. Remember that this walk script
shouldn't be used always because I don't know how stable it is
(I think if Chris Jones' one is different, it should be more
stable). You should then add to the function on_mouse_click
where you have written:
if (GetCursorMode() == 0) walk(mouse.x,mouse.y,GetViewportX());
there should be something like:
if ((GetCursorMode() == 0) && (character[EGO].room = 69))
  walk(mouse.x,mouse.y,GetViewportX());
  You can add as many looping rooms as you want, but you must
control each one's size from inside the walk function and also
add another && (character[EGO].room = whatever) to the if line.

  Thanks for your kind attention, now you have my permission to
go back to your normal lives ;)

Sincerely,
Kairus